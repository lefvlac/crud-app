{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lefteris\\\\Desktop\\\\React\\\\crud-app\\\\src\\\\components\\\\Navbar.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { makeStyles } from \"@mui/styles\";\nimport { alpha } from \"@mui/material/styles\";\nimport { AppBar, Toolbar, Typography, InputBase } from \"@mui/material\";\nimport { Search, Person } from \"@mui/icons-material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  toolbar: {\n    display: \"flex\",\n    justifyContent: \"space-between\"\n  },\n  search: {\n    display: \"flex\",\n    aligntItems: \"center\",\n    backgroundColor: alpha(theme.palette.common.white, 0.15),\n    \"&:hover\": {\n      backgroundColor: alpha(theme.palette.common.white, 0.25)\n    },\n    borderRadius: theme.shape.borderRadius,\n    width: \"50%\",\n    [theme.breakpoints.down(\"sm\")]: {\n      display: open => open ? \"flex\" : \"none\"\n    }\n  },\n  searchButton: {\n    marginRight: theme.spacing(2)\n  },\n  input: {\n    color: \"white\",\n    marginLeft: theme.spacing(2)\n  },\n  icons: {\n    display: \"flex\",\n    alignItems: \"center\"\n  }\n}));\n\nconst Navbar = () => {\n  _s();\n\n  const [open, setOpen] = useState(false);\n  const classes = useStyles({\n    open\n  });\n  return /*#__PURE__*/_jsxDEV(AppBar, {\n    children: /*#__PURE__*/_jsxDEV(Toolbar, {\n      className: classes.toolbar,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        children: \"Employer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.search,\n        children: [/*#__PURE__*/_jsxDEV(Search, {\n          className: classes.searchButton\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(InputBase, {\n          placeholder: \"Search...\",\n          className: classes.input\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.icons,\n        children: [/*#__PURE__*/_jsxDEV(Search, {\n          className: classes.searchButton,\n          onClick: () => setOpen(true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Person, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Navbar, \"sAdzNhf/eEVWcoR6sLHcRgUAoMI=\", false, function () {\n  return [useStyles];\n});\n\n_c = Navbar;\nexport default Navbar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Navbar\");","map":{"version":3,"sources":["C:/Users/Lefteris/Desktop/React/crud-app/src/components/Navbar.jsx"],"names":["React","useState","makeStyles","alpha","AppBar","Toolbar","Typography","InputBase","Search","Person","useStyles","theme","toolbar","display","justifyContent","search","aligntItems","backgroundColor","palette","common","white","borderRadius","shape","width","breakpoints","down","open","searchButton","marginRight","spacing","input","color","marginLeft","icons","alignItems","Navbar","setOpen","classes"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport { alpha } from \"@mui/material/styles\";\r\nimport { AppBar, Toolbar, Typography, InputBase } from \"@mui/material\";\r\nimport { Search, Person } from \"@mui/icons-material\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  toolbar: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n  search: {\r\n    display: \"flex\",\r\n    aligntItems: \"center\",\r\n    backgroundColor: alpha(theme.palette.common.white, 0.15),\r\n    \"&:hover\": {\r\n      backgroundColor: alpha(theme.palette.common.white, 0.25),\r\n    },\r\n    borderRadius: theme.shape.borderRadius,\r\n    width: \"50%\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      display: (open) => (open ? \"flex\" : \"none\"),\r\n    },\r\n  },\r\n  searchButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  input: {\r\n    color: \"white\",\r\n    marginLeft: theme.spacing(2),\r\n  },\r\n  icons: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n  },\r\n}));\r\n\r\nconst Navbar = () => {\r\n  const [open, setOpen] = useState(false);\r\n  const classes = useStyles({ open });\r\n  return (\r\n    <AppBar>\r\n      <Toolbar className={classes.toolbar}>\r\n        <Typography variant=\"h4\">Employer</Typography>\r\n        <div className={classes.search}>\r\n          <Search className={classes.searchButton} />\r\n          <InputBase placeholder=\"Search...\" className={classes.input} />\r\n        </div>\r\n        <div className={classes.icons}>\r\n          <Search\r\n            className={classes.searchButton}\r\n            onClick={() => setOpen(true)}\r\n          />\r\n          <Person />\r\n        </div>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n"]},"metadata":{},"sourceType":"module"}