{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lefteris\\\\Desktop\\\\React\\\\crud-app\\\\src\\\\components\\\\ResponsiveBar.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from \"react\";\nimport { makeStyles } from \"@mui/styles\";\nimport { AppBar, Toolbar, CssBaseline, Typography, useTheme, useMediaQuery, Button } from \"@mui/material\";\nimport { Link } from \"react-router-dom\";\nimport DrawerComponent from \"./Drawer\";\nimport { GlobalContext } from \"../store/GlobalState\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  navlinks: {\n    marginLeft: theme.spacing(5),\n    display: \"flex\"\n  },\n  logo: {\n    flexGrow: \"1\",\n    cursor: \"pointer\"\n  },\n  link: {\n    textDecoration: \"none\",\n    color: \"white\",\n    fontSize: \"20px\",\n    marginLeft: theme.spacing(20),\n    \"&:hover\": {\n      color: \"yellow\",\n      borderBottom: \"1px solid white\",\n      textDecoration: \"none\"\n    }\n  }\n}));\n\nconst ResponsiveBar = () => {\n  _s();\n\n  const classes = useStyles();\n  const theme = useTheme();\n  const isMobile = useMediaQuery(theme.breakpoints.down(\"md\"));\n  const ctx = useContext(GlobalContext);\n  return /*#__PURE__*/_jsxDEV(AppBar, {\n    position: \"static\",\n    children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Toolbar, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        className: classes.logo,\n        children: \"Navbar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), isMobile ? /*#__PURE__*/_jsxDEV(DrawerComponent, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.navlinks,\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          className: classes.link,\n          children: \"Home\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this), !ctx.isLoggedIn && /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/login\",\n          className: classes.link,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/register\",\n          className: classes.link,\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this), ctx.isLoggedIn && /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/settings\",\n          className: classes.link,\n          children: \"Settings\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 15\n        }, this), ctx.isLoggedIn && /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 32\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ResponsiveBar, \"0YAcWYQv/pvMvbjnKSph8YzNlvY=\", false, function () {\n  return [useStyles, useTheme, useMediaQuery];\n});\n\n_c = ResponsiveBar;\nexport default ResponsiveBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"ResponsiveBar\");","map":{"version":3,"sources":["C:/Users/Lefteris/Desktop/React/crud-app/src/components/ResponsiveBar.jsx"],"names":["React","useContext","makeStyles","AppBar","Toolbar","CssBaseline","Typography","useTheme","useMediaQuery","Button","Link","DrawerComponent","GlobalContext","useStyles","theme","navlinks","marginLeft","spacing","display","logo","flexGrow","cursor","link","textDecoration","color","fontSize","borderBottom","ResponsiveBar","classes","isMobile","breakpoints","down","ctx","isLoggedIn"],"mappings":"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","sourcesContent":["import React, { useContext } from \"react\";\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  CssBaseline,\r\n  Typography,\r\n  useTheme,\r\n  useMediaQuery,\r\n  Button,\r\n} from \"@mui/material\";\r\nimport { Link } from \"react-router-dom\";\r\nimport DrawerComponent from \"./Drawer\";\r\nimport { GlobalContext } from \"../store/GlobalState\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  navlinks: {\r\n    marginLeft: theme.spacing(5),\r\n    display: \"flex\",\r\n  },\r\n  logo: {\r\n    flexGrow: \"1\",\r\n    cursor: \"pointer\",\r\n  },\r\n  link: {\r\n    textDecoration: \"none\",\r\n    color: \"white\",\r\n    fontSize: \"20px\",\r\n    marginLeft: theme.spacing(20),\r\n    \"&:hover\": {\r\n      color: \"yellow\",\r\n      borderBottom: \"1px solid white\",\r\n      textDecoration: \"none\",\r\n    },\r\n  },\r\n}));\r\nconst ResponsiveBar = () => {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const isMobile = useMediaQuery(theme.breakpoints.down(\"md\"));\r\n  const ctx = useContext(GlobalContext);\r\n\r\n  return (\r\n    <AppBar position=\"static\">\r\n      <CssBaseline />\r\n      <Toolbar>\r\n        <Typography variant=\"h4\" className={classes.logo}>\r\n          Navbar\r\n        </Typography>\r\n        {isMobile ? (\r\n          <DrawerComponent />\r\n        ) : (\r\n          <div className={classes.navlinks}>\r\n            <Link to=\"/\" className={classes.link}>\r\n              Home\r\n            </Link>\r\n            {!ctx.isLoggedIn && (\r\n              <Link to=\"/login\" className={classes.link}>\r\n                Login\r\n              </Link>\r\n            )}\r\n            <Link to=\"/register\" className={classes.link}>\r\n              Register\r\n            </Link>\r\n            {ctx.isLoggedIn && (\r\n              <Link to=\"/settings\" className={classes.link}>\r\n                Settings\r\n              </Link>\r\n            )}\r\n            {ctx.isLoggedIn && <Button variant=\"contained\">Logout</Button>}\r\n          </div>\r\n        )}\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nexport default ResponsiveBar;\r\n"]},"metadata":{},"sourceType":"module"}